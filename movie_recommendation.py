# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LvffOT62eY2sSs-LQCkN5DsHDyaVVKjf
"""

import pandas as pd
import numpy as np

df = pd.read_csv("https://github.com/YBI-Foundation/Dataset/raw/main/Movies%20Recommendation.csv")
df

df.head()

df.info()

df.shape

df.columns

df_features=df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

x=df_features['Movie_Genre']+''+df_features['Movie_Keywords']+''+df_features['Movie_Tagline']+''+df_features['Movie_Cast']+''+df_features['Movie_Director']

x

x.shape

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf=TfidfVectorizer()

x=tfidf.fit_transform(x)

x.shape

print(x)

from sklearn.metrics.pairwise import cosine_similarity

similaity_score=cosine_similarity(x)

similaity_score

similaity_score.shape

favourite_movie_name=input("Enter your fevorite movie name :")

all_movies_title_list = df['Movie_Title'].tolist()

import difflib

Movie_recommendation = difflib.get_close_matches(favourite_movie_name,all_movies_title_list)
print(Movie_recommendation)

close_match=Movie_recommendation[0]
print(close_match)

index_of_close_match_movie = df[df.Movie_Title==close_match]['Movie_ID'].values[0]
print(index_of_close_match_movie )

recommendation_score=list(enumerate(similaity_score[index_of_close_match_movie]))
print(recommendation_score)

len(recommendation_score)

sorted_similar_movies = sorted(recommendation_score, key = lambda x:x[1],reverse = True)
print(sorted_similar_movies)

print('Top 30 movies suggested for you : \n')

i=1
for movie in sorted_similar_movies:
  index =movie[0]
  title_from_index = df[df.index==index]['Movie_Title'].values[0]
  if (i<31):
    print(i,'.',title_from_index)
    i+=1

Movie_name=input('enter your fevorite movie :')
list_of_all_titles=df['Movie_Title'].tolist()
find_close_match = difflib.get_close_matches(Movie_name,list_of_all_titles)
close_match=find_close_match[0]
index_of_movie = df[df.Movie_Title==close_match]['Movie_ID'].values[0]
recomendation_score=list(enumerate(similaity_score[index_of_movie]))
sorted_similar_movies=sorted(recomendation_score, key= lambda x:x[1], reverse=True)
print('Top 10 movies suggested for you : \n')

i=1
for movie in sorted_similar_movies:
  index =movie[0]
  title_from_index = df[df.index==index]['Movie_Title'].values[0]
  if (i<11):
    print(i,'.',title_from_index)
    i+=1